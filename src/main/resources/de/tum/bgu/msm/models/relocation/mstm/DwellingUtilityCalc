var calculateSelectDwellingUtility = function (ht, ddAreaUtility, ddPriceUtility, ddQualityUtility, ddAutoAccessibility,
ddTransitAccessibility, ddWorkDistanceUtility, ddTotalTravelCostsUtility) {

alpha = 0.0;
beta = 0.0;
gamma = 0.0;
delta = 0.0;
epsilon = 0.0;
eta = 0.0;

if (ht.name()=="size1inc1"){
    //old hhtype 0
    alpha = 0.12;
    beta = 0.25;
    gamma = 0.3;
    delta = 0.2;
    epsilon = 0.35;
    eta = 0.175;
} else if (ht.name()=="size2inc1"){
    //old hhtype 1
    alpha = 0.14;
    beta = 0.25;
    gamma = 0.3;
    delta = 0.2;
    epsilon = 0.35;
    eta = 0.175;
} else if (ht.name()=="size3inc1"){
    //old hhtype 2
    alpha = 0.16;
    beta = 0.25;
    gamma = 0.3;
    delta = 0.2;
    epsilon = 0.35;
    eta = 0.175;
} else if (ht.name()=="size4inc1"){
    //old hhtype 3
    alpha = 0.18;
    beta = 0.25;
    gamma = 0.3;
    delta = 0.2;
    epsilon = 0.35;
    eta = 0.175;
} else if (ht.name()=="size1inc2"){
    //old hhtype 4
    alpha = 0.17;
    beta = 0.2;
    gamma = 0.25;
    delta = 0.35;
    epsilon = 0.3;
    eta = 0.2;
} else if (ht.name()=="size2inc2"){
    //old hhtype 5
    alpha = 0.19;
    beta = 0.2;
    gamma = 0.25;
    delta = 0.35;
    epsilon = 0.3;
    eta = 0.2;
} else if (ht.name()=="size3inc2"){
    //old hhtype 6
    alpha = 0.21;
    beta = 0.2;
    gamma = 0.25;
    delta = 0.35;
    epsilon = 0.3;
    eta = 0.2;
} else if (ht.name()=="size4inc2"){
    //old hhtype 7
    alpha = 0.23;
    beta = 0.2;
    gamma = 0.25;
    delta = 0.35;
    epsilon = 0.3;
    eta = 0.2;
} else if (ht.name()=="size1inc3"){
    //old hhtype 8
    alpha = 0.22;
    beta = 0.15;
    gamma = 0.15;
    delta = 0.5;
    epsilon = 0.1;
    eta = 0.225;
} else if (ht.name()=="size2inc3"){
    //old hhtype 9
    alpha = 0.24;
    beta = 0.15;
    gamma = 0.15;
    delta = 0.5;
    epsilon = 0.1;
    eta = 0.225;
} else if (ht.name()=="size3inc3"){
    //old hhtype 10
    alpha = 0.26;
    beta = 0.15;
    gamma = 0.15;
    delta = 0.5;
    epsilon = 0.1;
    eta = 0.225;
} else if (ht.name()=="size4inc3"){
    //old hhtype 11
    alpha = 0.28;
    beta = 0.15;
    gamma = 0.15;
    delta = 0.5;
    epsilon = 0.1;
    eta = 0.225;
} else if (ht.name()=="size1inc4"){
    //old hhtype 12
    alpha = 0.27;
    beta = 0.12;
    gamma = 0.08;
    delta = 0.6;
    epsilon = 0.05;
    eta = 0.25;
} else if (ht.name()=="size2inc4"){
    //old hhtype 13
    alpha = 0.29;
    beta = 0.12;
    gamma = 0.08;
    delta = 0.6;
    epsilon = 0.05;
    eta = 0.25;
} else if (ht.name()=="size3inc4"){
    //old hhtype 14
    alpha = 0.31;
    beta = 0.12;
    gamma = 0.08;
    delta = 0.6;
    epsilon = 0.05;
    eta = 0.25;
} else if (ht.name()=="size4inc4"){
    //old hhtype 15
    alpha = 0.33;
    beta = 0.12;
    gamma = 0.08;
    delta = 0.6;
    epsilon = 0.05;
    eta = 0.25;
} else {
    throw new Error("The household type is not defined!")
}
optFactors = alpha*ddAreaUtility+beta*ddAutoAccessibility+gamma*ddTransitAccessibility+(1.0-alpha-beta-gamma)*ddQualityUtility;
return Math.pow(optFactors,delta)*Math.pow(ddPriceUtility,epsilon)*Math.pow(ddWorkDistanceUtility,eta)*Math.pow(ddTotalTravelCostsUtility,(1.0-delta-epsilon-eta));
}