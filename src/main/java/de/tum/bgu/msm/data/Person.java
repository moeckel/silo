/*
 * Copyright  2005 PB Consult Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */
package de.tum.bgu.msm.data;

import org.matsim.api.core.v01.Coord;

import java.util.Comparator;

/**
 * @author Greg Erhardt 
 * Created on Dec 2, 2009
 *
 */
public final class Person implements Id {

    // Note: if attributes are edited, remember to edit attributes for inmigrants in \relocation\InOutMigration\setupInOutMigration.java and \relocation\InOutMigration\inmigrateHh.java as well
    //Attributes that must be initialized when one person is generated
    private final int id;
    private final int gender;
    private final Race race;

    private int age;
	private int occupation;
    private int workplace;        // job ID
    private int schoolPlace = 0;  // ID of school
    private Coord schoolCoord;
	private int income;
    //Attributes that are generated by SILO
	private Household hh;
	private PersonType type;
    private PersonRole role;
    //Attributes that could be additionally defined from the synthetic population. Remember to use "set"
    private int telework = 0;
    private int educationLevel = 0;
    private Nationality nationality = Nationality.GERMAN;
    private float travelTime = 0;
    private int jobTAZ = 0;
    private boolean driverLicense = false;
    private int schoolType = 0;

    Person(int id, int age, int gender, Race race, int occupation, int workplace, int income) {
		this.id = id;
		this.age = age;
		this.gender = gender; 
		this.race = race;
		this.occupation = occupation;
        this.workplace = workplace;
		this.income = income; 
		setType();
    }

    private void setType () {
        this.type = PersonType.defineType(this);
    }

    void setHousehold(Household household) {
        this.hh = household;
    }

    public Household getHh() {
        return this.hh;
    }

    public void setRole(PersonRole pr) {
        this.role = pr;
    }

    public void birthday() {
        this.age++;
        setType();
    }

    public void setIncome (int newIncome) {
        this.income = newIncome;
        hh.setType();
    }

    public void setWorkplace(int newWorkplace) {
        this.workplace = newWorkplace;
    }

    public void setOccupation(int newOccupation) {
        this.occupation = newOccupation;
    }

    public int getId() {
		return id; 
	}
	
	public int getAge() {
		return age; 
	}

    public int getGender() {
        return gender;
    }

    public Race getRace() {
        return race;
    }

    public int getOccupation() {
        return occupation;
    }

    public int getIncome() {
        return income;
    }

    public PersonType getType() {
		return type;
	}

    public PersonRole getRole() {
		return role;
	}

    public int getWorkplace() {
        return workplace;
    }

    public void setEducationLevel(int educationLevel) {
        this.educationLevel = educationLevel;
    }

    public int getEducationLevel() {
        return educationLevel;
    }

    public void setTelework(int telework) {
        this.telework = telework;
    }

    public int getTelework() {
        return telework;
    }

    public void setNationality(Nationality nationality) {
        this.nationality = nationality;
    }

    public Nationality getNationality() {
        return nationality;
    }

    public void setTravelTime(float travelTime){ this.travelTime = travelTime;}

    public float getTravelTime() { return travelTime; }

    public void setJobTAZ(int jobTAZ){ this.jobTAZ = jobTAZ;}

    public int getJobTAZ() { return jobTAZ; }

    public void setDriverLicense(boolean driverLicense){ this.driverLicense = driverLicense;}

    public boolean hasDriverLicense() { return driverLicense; }

    public void setSchoolType(int schoolType) {this.schoolType = schoolType; }

    public int getSchoolType() {return schoolType;}

    public void setSchoolPlace(int schoolPlace) {this.schoolPlace = schoolPlace;}

    public int getSchoolPlace() {return schoolPlace;}

    public Coord getSchoolCoord() {
        return schoolCoord;
    }

    public void setSchoolCoord(Coord schoolCoord) {
        this.schoolCoord = schoolCoord;
    }

    @Override
    public String toString() {
        return "Attributes of person " + id
        +"\nHousehold id         " + hh.getId()
        +"\nAge                  " + age
        +"\nGender (1 m, 2 f)    " + gender
        +"\nRole in household    " + role
        +"\nRace                 " + race
        +"\nOccupation           " + occupation
        +"\nWorkplace ID         " + workplace
        +"\nIncome               " + income
        +"\nPerson type          " + type.toString();
    }



    static class PersonByAgeComparator implements Comparator<Person> {
        @Override
        public int compare(Person person1, Person person2) {
            return Integer.compare(person1.getAge(), person2.getAge());
        }
    }
}
